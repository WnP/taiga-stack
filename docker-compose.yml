version: "3.3"

networks:
  taiga_network:
      driver: overlay
      attachable: true
  http:
    external: true

configs:
    taiga_django_settings:
        external: true
    taiga_django_celery_settings:
        external: true
    taiga_caddyfile:
        external: true
    taiga_front_json:
        external: true
    taiga_crontab:
        external: true
    taiga_ssh_authorized_keys:
        external: true
    taiga_maintenance_authorized_keys:
        external: true

secrets:
    taiga-back-celery-settings-orus-io:
        external: true
    taiga-back-settings-orus-io:
        external: true
    taiga-back-events-config:
        external: true
    taiga_maintenance.yml:
        external: true
    taiga-rabbitmq-setup.sh:
        external: true

volumes:
    static:
    media:
    postgres:

services:

    maintenance:
        image: dockerhub.xcg.io/cloudcrane/maintenance:3.0.4
        hostname: taiga-maintenance
        networks:
            - http
            - taiga_network
        ports:
            - "2203:22"
        secrets:
            - source: taiga_maintenance.yml
              target: /run/maintenance.yml
        configs:
            - source: taiga_maintenance_authorized_keys
              target: /srv/authorized_keys
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - node.labels.taiga == 1

    ssh:
        image: dockerhub.xcg.io/cloudcrane/alpine-ssh:latest
        networks:
            - taiga_network
        ports:
            - 2201:22
        configs:
            - source: taiga_ssh_authorized_keys
              target: /home/anon/.ssh/authorized_keys
              uid: "133742"
              gid: "133742"
              mode: 0600
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - node.labels.taiga == 1

    postgres:
        image: postgres:9.6-alpine
        environment:
            - POSTGRES_PASSWORD=taiga
            - POSTGRES_USER=taiga
            - POSTGRES_DB=taiga
        networks:
            - taiga_network
        volumes:
            - postgres:/var/lib/postgresql/data
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - node.labels.taiga == 1

    django:
        image: registry.orus.io/taiga-back:3.4.0_2bf64a8f_timetracking_0.2.2_4f1005b_s3
        networks:
            - taiga_network
        depends_on:
            - rabbitmq
            - redis
        volumes:
            - static:/usr/django/app/static
            - media:/usr/django/app/media
        configs:
              - source: taiga_django_settings
                target: /usr/django/app/settings/local.py
              - source: taiga_django_celery_settings
                target: /usr/django/app/settings/celery_local.py
        secrets:
            - source: taiga-back-settings-orus-io
            - source: taiga-back-celery-settings-orus-io
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - node.labels.taiga == 1

    celery:
        image: registry.orus.io/taiga-back:3.4.0_2bf64a8f_timetracking_0.2.2_4f1005b_s3
        user: django
        entrypoint: /usr/local/bin/celery
        command: -A taiga worker -c 4 -l INFO -Q tasks,transient
        networks:
            - taiga_network
        depends_on:
            - rabbitmq
            - redis
        volumes:
            - static:/usr/django/app/static
            - media:/usr/django/app/media
        configs:
              - source: taiga_django_settings
                target: /usr/django/app/settings/local.py
              - source: taiga_django_celery_settings
                target: /usr/django/app/settings/celery_local.py
        secrets:
            - source: taiga-back-settings-orus-io
            - source: taiga-back-celery-settings-orus-io
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - node.labels.taiga == 1

    notifications:
        image: registry.orus.io/taiga-back:3.4.0_2bf64a8f_timetracking_0.2.2_4f1005b_s3
        entrypoint: /usr/sbin/cron
        command: -f
        networks:
            - taiga_network
        depends_on:
            - rabbitmq
            - redis
        volumes:
            - static:/usr/django/app/static
            - media:/usr/django/app/media
        configs:
              - source: taiga_django_settings
                target: /usr/django/app/settings/local.py
              - source: taiga_django_celery_settings
                target: /usr/django/app/settings/celery_local.py
              - source: taiga_crontab
                target: /etc/crontab
        secrets:
            - source: taiga-back-settings-orus-io
            - source: taiga-back-celery-settings-orus-io
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - node.labels.taiga == 1

    rabbitmq:
        image: dockerhub.xcg.io/cloudcrane/rabbitmq:latest
        secrets:
            - source: taiga-rabbitmq-setup.sh
              target: /run/rabbitmq-setup.sh
        networks:
            - taiga_network
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - node.labels.taiga == 1

    redis:
        image: redis:4-alpine
        networks:
            - taiga_network
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - node.labels.taiga == 1

    taiga_events:
        image: registry.orus.io/taiga-events:_3583834
        secrets:
            - source: taiga-back-events-config
              target: config.json
        networks:
            - taiga_network
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - node.labels.taiga == 1

    caddy:
        image: registry.orus.io/taiga-front:3.4.0_0f6220f4
        depends_on:
            - django
            - taiga_events
        networks:
            - taiga_network
            - http
        volumes:
            - static:/srv/taiga-back-static
            - media:/srv/taiga-back-media
        configs:
            - source: taiga_caddyfile
              target: /etc/caddy/Caddyfile
            - source: taiga_front_json
              target: /srv/taiga-front/conf.json
        deploy:
            mode: replicated
            replicas: 1
            labels:
                - traefik.enable=true
                - traefik.frontend.rule=Host:project.orus.io
                - traefik.port=7416
                - traefik.docker.network=http
            placement:
                constraints:
                    - node.labels.taiga == 1

